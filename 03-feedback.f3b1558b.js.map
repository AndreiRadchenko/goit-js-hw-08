{"mappings":"AAEA,IAAIA,EAAM,EAGV,IAAIC,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GAEvB,IAAIC,EAAM,CACRC,IAAK,EACLC,MAAM,EACNC,IAAK,mBACLC,IAAK,CAAC,IAAK,IAAK,KAChBC,QAAS,OCMI,C,KAlBF,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCT,IACX,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,KDChCI,KAAK,SAAUnB,GAE5B,IAAIoB,EAAUX,KAAKC,UAAUZ,GAC7BgB,QAAQO,WAAWD,GACnBN,QAAQO,IAAID,GACZtB,EAAMW,KAAKS,MAAME,GACjBN,QAAQO,WAAWvB,GACnBgB,QAAQO,IAAIvB,GAEZ,IAAIwB,EAAUb,KAAKC,UAAUX,GAC7Be,QAAQO,WAAWC,GACnBR,QAAQO,IAAIC,GACZvB,EAAMU,KAAKS,MAAMI,GACjBR,QAAQO,WAAWtB,GACnBe,QAAQO,IAAItB,GAEZ,IAAIwB,EAAUd,KAAKC,UAAUV,GAC7Bc,QAAQO,WAAWE,GACnBT,QAAQO,IAAIE,GACZvB,EAAMS,KAAKS,MAAMK,GACjBT,QAAQO,WAAWrB,GACnBc,QAAQO,IAAIrB","sources":["src/js/03-feedback.js","src/js/storage.js"],"sourcesContent":["import losalStorage from './storage';\n\nlet num = 5;\nconst bool = true;\nconst str = 'my string';\nlet arr = [1, 2, 3, 4, 5];\nconst nullVar = null;\nlet obj = {\n  num: 5,\n  bool: false,\n  str: 'my second string',\n  arr: ['a', 'b', 'c'],\n  nullVar: null,\n};\n\nlosalStorage.save('object', obj);\n\nlet jsonNum = JSON.stringify(num);\nconsole.log(typeof jsonNum);\nconsole.log(jsonNum);\nnum = JSON.parse(jsonNum);\nconsole.log(typeof num);\nconsole.log(num);\n\nlet jsonArr = JSON.stringify(arr);\nconsole.log(typeof jsonArr);\nconsole.log(jsonArr);\narr = JSON.parse(jsonArr);\nconsole.log(typeof arr);\nconsole.log(arr);\n\nlet jsonObj = JSON.stringify(obj);\nconsole.log(typeof jsonObj);\nconsole.log(jsonObj);\nobj = JSON.parse(jsonObj);\nconsole.log(typeof obj);\nconsole.log(obj);\n\n// console.log(JSON.stringify(bool));\n// console.log(JSON.stringify(str));\n// console.log(str);\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n};\n"],"names":["$945622fd0f572e60$var$num","$945622fd0f572e60$var$arr","$945622fd0f572e60$var$obj","num","bool","str","arr","nullVar","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","save","$945622fd0f572e60$var$jsonNum","log","$945622fd0f572e60$var$jsonArr","$945622fd0f572e60$var$jsonObj"],"version":3,"file":"03-feedback.f3b1558b.js.map"}